name: skyparser
on: [push]
jobs:
  build_images:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v3
      - name: copy files
        run: |          
          cp constants.py telegram_bot/
          cp create_loggers.py telegram_bot/
          cp managers/logging_manager.py telegram_bot/managers/
      - name: build skyparser image
        run: docker build -t plamer88/sky_parser:parser-$GITHUB_RUN_ID .
      - name: build telebot image
        run: docker build -t plamer88/sky_parser:telebot-$GITHUB_RUN_ID telegram_bot/.
      - name: docker login
        run: echo ${{secrets.DOCKER_TOKEN}} | docker login -u plamer88 --password-stdin
      - name: push parser image
        run: docker push plamer88/sky_parser:parser-$GITHUB_RUN_ID
      - name: push telebot image
        run: docker push plamer88/sky_parser:telebot-$GITHUB_RUN_ID

  deploy_application:
    needs: build_images
    runs-on: ubuntu-latest
    env:
      BOT_TOKEN: ${{secrets.BOT_TOKEN}}
      GOOGLE_SHEET_PRIVATE_KEY: ${{secrets.GOOGLE_SHEET_PRIVATE_KEY}}
      SERVER_PASSWORD: ${{secrets.PASSWORD}}
    steps:
      - name: clone repo
        uses: actions/checkout@v3
      - name: prepare files
        run: |
          cat telegram_bot/.env-ci | envsubst > .env
          cat auth_data/skyparser-ci.json | envsubst > skyparser_auth.json
          cat docker-compose-ci.yaml | envsubst > docker-compose.yaml
          cat sky_parser-ci.service | envsubst > sky_parser.service
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          password: ${{secrets.PASSWORD}}
          source: '.env,skyparser_auth.json,docker-compose.yaml,data/telebot_data/bot_phrases.json,sky_parser.service'
          target: '/home/sky_parser'
      - name: run application
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          password: ${{secrets.PASSWORD}}
          script: |
            cd /home/sky_parser
            echo ${{secrets.PASSWORD}} | sudo -S cp sky_parser.service /etc/systemd/system
            sudo systemctl stop sky_parser.service
            sudo systemctl daemon-reload
            sudo systemctl start sky_parser
            sudo systemctl enable sky_parser    
